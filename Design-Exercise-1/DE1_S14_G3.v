/**
 * This is an autogenerated netlist code from CircuitVerse. Verilog Code can be
 * tested on https://www.edaplayground.com/ using Icarus Verilog 0.9.7. This is an
 * experimental module and some manual changes make need to be done in order for
 * this to work.
 *
 * If you have any ideas/suggestions or bug fixes, raise an issue
 * on https://github.com/CircuitVerse/CircuitVerse/issues/new/choose
 */

/*
  Element Usage Report
    Input - 4 times
    AndGate - 35 times
    OrGate - 7 times
    SevenSegDisplay - 1 times
    Output - 7 times
    NotGate - 4 times
*/

/*
  Usage Instructions and Tips
    Labels - Ensure unique label names and avoid using verilog keywords
    Warnings - Connect all optional inputs to remove warnings
*/

// Sample Testbench Code - Uncomment to use

/*
module TestBench();

  reg W, X, Y, Z;

  wire A, B, C, D, E, F, G;

  Main DUT0(A, B, C, D, E, F, G, W, X, Y, Z);

  initial begin
    W = 0;
    X = 0;
    Y = 0;
    Z = 0;

    #15
    $display("A = %b", A);
    $display("B = %b", B);
    $display("C = %b", C);
    $display("D = %b", D);
    $display("E = %b", E);
    $display("F = %b", F);
    $display("G = %b", G);

    #10
    $display("A = %b", A);
    $display("B = %b", B);
    $display("C = %b", C);
    $display("D = %b", D);
    $display("E = %b", E);
    $display("F = %b", F);
    $display("G = %b", G);

    $finish;

  end
endmodule

*/

module DE1(A, B, C, D, E, F, G, W, X, Y, Z);
  output A,  B,  C,  D,  E,  F,  G;
  input W, X, Y, Z;
  wire and_34_out, or_6_out, and_30_out, or_5_out, and_28_out, and_27_out, and_26_out, and_14_out, or_2_out, and_12_out, and_5_out, or_0_out, and_1_out, not_3_out, and_32_out, and_29_out, and_21_out, or_3_out, and_18_out, and_15_out, and_9_out, or_1_out, and_6_out, and_4_out, and_2_out, and_31_out, and_19_out, and_7_out, not_2_out, and_33_out, and_25_out, and_24_out, or_4_out, and_22_out, and_20_out, and_16_out, and_11_out, and_10_out, and_3_out, and_13_out, and_8_out, not_1_out, and_23_out, and_17_out, and_0_out, not_0_out;
  assign and_34_out = not_0_out & not_1_out & Z;
  assign or_6_out = and_31_out | and_32_out | and_33_out | and_34_out;
  
      always @ (*)
        $display("SevenSegDisplay:SevenSegDisplay_0.abcdefg. = %b%b%b%b%b%b%b%b}",
                 or_0_out, or_1_out, or_2_out, or_3_out, or_4_out, or_5_out, or_6_out, );
  assign G = or_6_out;
  assign and_30_out = W & not_2_out & Z;
  assign or_5_out = and_25_out | and_26_out | and_27_out | and_28_out | and_29_out | and_30_out;
  assign F = or_5_out;
  assign and_28_out = not_1_out & not_2_out & Z;
  assign and_27_out = not_0_out & Y & Z;
  assign and_26_out = not_0_out & not_1_out & Z;
  assign and_14_out = not_2_out & Z;
  assign or_2_out = and_11_out | and_12_out | and_13_out | and_14_out | and_15_out | and_16_out;
  assign C = or_2_out;
  assign and_12_out = not_0_out & Z;
  assign and_5_out = not_2_out & Z;
  assign or_0_out = and_0_out | and_1_out | and_2_out | and_3_out | and_4_out | and_5_out;
  assign A = or_0_out;
  assign and_1_out = not_0_out & Z;
  assign not_3_out = ~Z;
  assign and_32_out = Y & not_3_out;
  assign and_29_out = W & Y & not_3_out;
  assign and_21_out = W & X & not_3_out;
  assign or_3_out = and_17_out | and_18_out | and_19_out | and_20_out | and_21_out | and_22_out;
  assign D = or_3_out;
  assign and_18_out = X & Y & not_3_out;
  assign and_15_out = W & Y & not_3_out;
  assign and_9_out = not_1_out & not_3_out;
  assign or_1_out = and_6_out | and_7_out | and_8_out | and_9_out | and_10_out;
  assign B = or_1_out;
  assign and_6_out = not_0_out & not_3_out;
  assign and_4_out = W & X & not_3_out;
  assign and_2_out = X & Y & not_3_out;
  assign and_31_out = not_0_out & Y;
  assign and_19_out = not_0_out & Y;
  assign and_7_out = not_0_out & Y;
  assign not_2_out = ~Y;
  assign and_33_out = W & not_2_out;
  assign and_25_out = not_0_out & not_1_out & not_2_out;
  assign and_24_out = not_1_out & not_2_out;
  assign or_4_out = and_23_out | and_24_out;
  assign E = or_4_out;
  assign and_22_out = W & not_2_out;
  assign and_20_out = not_1_out & not_2_out;
  assign and_16_out = X & not_2_out;
  assign and_11_out = not_0_out & not_2_out;
  assign and_10_out = W & not_2_out;
  assign and_3_out = not_1_out & not_2_out;
  assign and_13_out = not_0_out & X;
  assign and_8_out = not_0_out & X;
  assign not_1_out = ~X;
  assign and_23_out = not_0_out & not_1_out;
  assign and_17_out = not_0_out & not_1_out;
  assign and_0_out = not_0_out & not_1_out;
  assign not_0_out = ~W;
endmodule
